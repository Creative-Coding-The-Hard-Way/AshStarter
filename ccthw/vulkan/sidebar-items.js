initSidebarItems({"fn":[["create_default_allocator","Create the default system memory allocator."]],"mod":[["errors",""],["sync","Vulkan synchronization privite wrappers."]],"struct":[["Allocation","A single allocated piece of device memory."],["Buffer","A Vulkan buffer and it’s associated device memory."],["CommandBuffer","A Vulkan CommandBuffer wrapper which automatically frees the buffer when its dropped."],["CommandPool","A Vulkan CommandPool wrapper which automatically destroys the pool when it’s dropped."],["DescriptorPool","An owned Descriptor Pool which is automatically destroyed when dropped."],["DescriptorSet","A Vulkan descriptor set wrapper."],["DescriptorSetLayout","An owned Descriptor Set Layout which is automatically destroyed when dropped."],["Framebuffer","An owned Vulkan framebuffer which is automatically destroyed when it is dropped."],["GpuQueue","This struct bundles a Vulkan queue with related data for easy tracking."],["GpuVec","A resizable GPU Buffer which holds a contiguous slice of T’s."],["Image","A owned Vulkan image handle which is automatically destroyed when it is dropped."],["ImageView","An owned Vulkan image view which is automatically destroyed when it is dropped."],["Instance","The Instance struct holds the ash entry and ash library handle along with the debug callback."],["LockedMemoryAllocator","A memory allocator implementation which decorates a composed allocator with a mutex."],["OneTimeSubmitCommandPool","A command pool + command buffer combo which provides a convenient method for synchronously submitting commands to a queue."],["PassthroughAllocator","A composable allocator which just defers all allocation to the underlying Vulkan device."],["Pipeline","An owned Pipeline which is destroyed automatically when it’s dropped."],["PipelineLayout","An owned Pipeline Layout which is destroyed automatically when it’s dropped."],["RenderDevice","The render device holds the core Vulkan state and devices which are used by all parts of the application."],["RenderPass","An owned Vulkan RenderPass which automatically destroys itself when dropped."],["ShaderModule","An owned vk::ShaderModule which is destroyed automatically when it falls out of scope."],["WindowSurface","A wrapper for the Surface and Loader used by this application. It’s convenient to keep these pieces of data together because they’re so frequently used together."]],"trait":[["ComposableAllocator","The device memory allocation interface. This is the compositional API for GPU memory allocation."],["MemoryAllocator",""],["VulkanDebug","Types which implement this trait can set their name in the Vulkan validation layer logs."]]});